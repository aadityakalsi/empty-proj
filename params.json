{"name":"empty-proj","tagline":"Empty project to clone for new C/C++ libraries.","body":"empty-proj [![Build Status](https://travis-ci.org/aadityakalsi/empty-proj.svg?branch=master)](https://travis-ci.org/aadityakalsi/empty-proj)\r\n==========\r\n\r\nA simple C/C++ project scaffold. Uses CMake to allow new C and C++ projects to be easily integrated.\r\n\r\nComes built-in with support for:\r\n* Unittest support for all platforms\r\n* Code coverage on *NIX using ```lcov```. Can be installed using ```sudo apt-get install lcov``` or ```brew install lcov```\r\n* Supports doxygen generation via the ```doc/``` directory.\r\n* [Hunter](http://github.com/ruslo/hunter) can also be used along with ```cmake/ProjTools.cmake``` to allow for better 3rd party build management.\r\n\r\nTo use this repo:\r\n\r\n```\r\ngit clone https://github.com/aadityakalsi/empty-proj\r\n```\r\n\r\nTo create a new C or C++ project, call ```clone```.\r\n\r\n```\r\nempty-proj/clone myNewProject\r\n```\r\n\r\nThen:\r\n\r\n```\r\ncd myNewProject\r\ntools/build [Debug/Release]\r\ntools/codecov\r\ntools/install\r\n```\r\n\r\nFor the CMake module:\r\n\r\n```\r\n ProjTools.cmake\r\n ---------------\r\n \r\n CMake module that is meant as a single include in your op level\r\n CMakeLists.txt.\r\n \r\n Before including this module, the following efinitions need to\r\n be in place in your main CMakeLists.txt file.\r\n \r\n Project structure:\r\n \r\n + project\r\n |\r\n |- CMakeLists.txt\r\n |- LICENSE.txt\r\n |- README.txt\r\n |+ cmake\r\n |+ module1\r\n |+ module2\r\n |...\r\n |+ unittest (Unittest header available for writing nittests)\r\n |\r\n \r\n Sample CMakeLists.txt file:\r\n \r\n # CMakeLists.txt\r\n #\r\n # # -- This cmake file works only wth CMake >= 2.8\r\n # cmake_minimum_required(VERSION 2.8)\r\n #\r\n # # -- Set the project versioning details\r\n # set(PROJ_NAME <your_project_name>)\r\n # project(${PROJ_NAME})\r\n # set(PROJ_INSTALL_DIR <install_location>)\r\n # set(CPACK_PACKAGE_VERSION \"0.1.1\")\r\n # set(CPACK_PACKAGE_VERSION_MAJOR \"0\")\r\n # set(CPACK_PACKAGE_VERSION_MINOR \"1\"))\r\n # set(CPACK_PACKAGE_VERSION_PATCH \"1\")\r\n # set(CPACK_PACKAGE_CONTACT <your_email>)\r\n #\r\n # # -- Set the license and readme file for your project\r\n # set(license_file <license_file>)\r\n # set(readme_file  <readme_file>)\r\n\r\n # # -- Include this module\r\n # set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} {CMAKE_CURRENT_SOURCE_DIR}/cmake)\r\n # set(USE_CPP )\r\n # # -- Can also set USE_CPP11\r\n #\r\n # # -- Finally include this magic CMake file\r\n # include(ProjTools)\r\n #\r\n # # -- Add targets below\r\n # add_subdirectory(module1; module2)\r\n #\r\n # # -- Functions available\r\n # add_inc_dir()\r\n # add_exe()\r\n # add_lib()\r\n # add_lib_build_def()\r\n # link_libs()\r\n # set_tgt_ver()\r\n # install_hdr()\r\n # install_tgt()\r\n # \r\n # # -- Functions available for tests\r\n # In tests, you should use:\r\n # add_test_exe()\r\n # test_link_libs()\r\n # create_test()\r\n #\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}